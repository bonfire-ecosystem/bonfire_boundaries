<div>
  {#if @section == "new"}
    <Bonfire.Boundaries.Web.NewCircleLive
      scope={@scope}
      parent_back={@myself}
      event_target={@myself}
      setting_boundaries={@setting_boundaries}
    />
  {#else}
    <div class="p-4">
      <div class="flex items-center ">
        <h2 class="flex-1 text-xs font-semibold tracking-wide uppercase text-base-content/80">{l("Circles")}</h2>
        <!-- <Bonfire.Boundaries.Web.NewCircleLive event_target={@myself} setting_boundaries={@setting_boundaries} /> -->
        <div :on-click="assign" phx-value-section="new" class="normal-case btn btn-secondary btn-sm">
          {l("New circle")}
        </div>
      </div>

      <ul class="grid grid-cols-1 gap-3 mt-3 lg:grid-cols-3 md:grid-cols-2">
        {#for circle <- e(@circles, [])}
          <li class="relative flex h-[200px] bg-base-content/5 shadow-2xl rounded-xl items-center justify-between flex-1 p-3  hover:bg-base-content/5">
            <LiveRedirect class="flex-1 w-full" to={~p"/settings/circle/" <> circle.id}>
              <div class="h-[60px]"></div>
              <div class="absolute flex flex-col gap-2 left-2 right-2 bottom-3">
                <div class="flex flex-col gap-1">
                  <div class="text-sm font-semibold">{LiveHandler.subject_name(circle)}</div>
                  <div class="text-sm line-clamp-2 text-base-content/70">{e(circle, :extra_info, :summary, nil)}</div>
                </div>
                <Bonfire.Boundaries.Web.CirclePreviewLive
                  members={e(circle, :encircles, [])}
                  count={e(circle, :encircles_count, 0)}
                  size={8}
                />

                <!-- <div class="text-sm text-base-content/80">{e(circle, :encircles_count, 0)} members</div> -->
              </div>
            </LiveRedirect>
          </li>
        {/for}
      </ul>
    </div>
  {/if}
</div>
