<div>
  {#if @section == "new"}
    <Bonfire.Boundaries.Web.NewCircleLive
      scope={@scope}
      parent_back={@myself}
      event_target={@myself}
      setting_boundaries={@setting_boundaries}
    />
  {#else}
    <!-- <div class="p-4 border-b bg-base-content/10 border-base-content/30">
    <form class="flex items-center" phx-submit="Bonfire.Boundaries:circle_create">
      <input class="flex-1 mr-4 input input-bordered" type="text" name="name" placeholder="Circle name"/>
      <button type="submit" class="normal-case btn btn-primary">
      {l "Create a new circle"}</button>
    </form>
  </div> -->

    <div class="p-4">
      <div class="flex items-center px-2 space-x-9">
        <h2 class="flex-1 text-xs font-semibold tracking-wide uppercase text-base-content/80">{l("Circles")}</h2>
        <!-- <Bonfire.Boundaries.Web.NewCircleLive event_target={@myself} setting_boundaries={@setting_boundaries} /> -->
        <div :on-click="assign" phx-value-section="new" class="normal-case btn btn-outline btn-sm">
          {l("Create")}
        </div>
      </div>

      <ul class="mt-3">
        {#for circle <- e(@circles, [])}
          <li class="flex items-center justify-between flex-1 p-3 mb-3 border rounded hover:bg-base-content/5 border-base-content/30">
            <LiveRedirect class="flex-1 w-full" to={"/settings/circle/" <> circle.id}>
              <div class="">
                <div class="flex items-center space-x-2">
                  <!-- <Icon solid="UserGroup" class="w-5 h-5 text-base-content/80" /> -->
                  <div class="text-base font-semibold">{LiveHandler.subject_name(circle)}</div>
                </div>

                <Bonfire.Boundaries.Web.CirclePreviewLive
                  members={e(circle, :encircles, [])}
                  count={e(circle, :encircles_count, 0)}
                />

                <!-- <div class="text-sm text-base-content/80">{e(circle, :encircles_count, 0)} members</div> -->
                <div class="text-sm text-base-content/80">{e(circle, :extra_info, :summary, nil)}</div>
              </div>
              <!-- <div class="flex-shrink-0 pr-2">
              <div x-cloak x-data="{ open: false }" @keydown.escape.stop="open = false" @click.outside="open = false" class="relative inline-block text-left">
                <button
                  @click="open = !open" aria-haspopup="true" x-bind:aria-expanded="open" aria-expanded="true"
                  class="inline-flex items-center justify-center w-8 h-8 bg-transparent rounded-full bg-base-100 text-base-content opacity-60 hover:text-base-content focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-secondary-500">
                  <span class="sr-only">Open options</span>
                  <Icon solid="DotsVertical" />
                </button>
                <div x-description="Dropdown menu, show/hide based on menu state." x-show="open" x-transition:enter="transition ease-out duration-100" x-transition:enter-start="transform opacity-0 scale-95" x-transition:enter-end="transform opacity-60 scale-100" x-transition:leave="transition ease-in duration-75" x-transition:leave-start="transform opacity-60 scale-100" x-transition:leave-end="transform opacity-0 scale-95" class="absolute right-0 w-56 mt-2 origin-top-right divide-y divide-gray-100 rounded-md shadow-lg bg-base-100 ring-1 ring-black ring-opacity-5 focus:outline-none" role="menu" aria-orientation="vertical" aria-labelledby="options-menu">
                  <div class="py-1" role="none">
                    <a href={"/settings/circle/"<>circle.id} class="flex items-center px-4 py-2 text-sm group text-base-content opacity-70 hover:bg-neutral hover:bg-opacity-30 hover:bg-opacity-75 hover:text-base-content opacity-90" role="menuitem">
                      <Icon solid="Collection" />
                      View/edit members
                    </a>
                    <a href="#" class="flex items-center px-4 py-2 text-sm group text-base-content opacity-70 hover:bg-neutral hover:bg-opacity-30 hover:text-base-content opacity-90" role="menuitem">
                      <svg class="w-5 h-5 mr-3 text-base-content opacity-60 group-hover:text-base-content" x-description="Heroicon name: solid/pencil-alt" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true"><path d="M17.414 2.586a2 2 0 00-2.828 0L7 10.172V13h2.828l7.586-7.586a2 2 0 000-2.828z"></path><path fill-rule="evenodd" d="M2 6a2 2 0 012-2h4a1 1 0 010 2H4v10h10v-4a1 1 0 112 0v4a2 2 0 01-2 2H4a2 2 0 01-2-2V6z" clip-rule="evenodd"></path></svg>
                      Edit
                    </a> 
                  </div>

                  <div class="py-1" role="none">
                    <a href="#" class="flex items-center px-4 py-2 text-sm group text-base-content opacity-70 hover:bg-neutral hover:bg-opacity-30 hover:text-base-content opacity-90" role="menuitem">
                      <Icon solid="Trash" />
                      Delete
                    </a>
                  </div>
                </div>
              </div>
            </div> -->
            </LiveRedirect>
          </li>
        {/for}
      </ul>
    </div>
  {/if}
</div>
