<div id="circle_preview" x-data="{search: false}" class="">
  <div class="">
    <#slot />
    <ul
      :if={!@stereotype_id and !@read_only}
      class="menu mt-4 menu-horizontal gap-3 bg-base-100 mx-4"
    >
      <li>
        <button
          @click="search = !search"
          class="btn btn-active hover:!bg-opacity/80 btn-outline normal-case !border !border-base-content/30 rounded-full btn-sm"
        >
          <#Icon solid="search" class="w-4 h-4" />
          <span>{l("Add users")}</span>
        </button>
      </li>
      <li data-role="edit_circle_name" class="edit_name">
        <Bonfire.UI.Common.OpenModalLive
          id="edit_name"
          title_text={l("Edit circle name")}
          no_actions
          open_btn_wrapper_class="flex flex-1 w-full"
          form_opts={%{"phx-submit" => "Bonfire.Boundaries:edit"}}
        >
          <div class="w-full mt-4 form-control">
            <input type="hidden" name="id" value={e(@circle, :id, nil)}>
            <div class="flex items-center">
              <input
                name="named[name]"
                value={e(@circle, :named, :name, nil)}
                type="text"
                placeholder="Type here"
                class="w-full input input-bordered"
              />
            </div>
          </div>

          <button type="submit" class="w-full mt-3 normal-case btn btn-primary">{l("Save")}</button>
          <:open_btn>
            <button
              type="button"
              class="btn btn-outline normal-case !border !border-base-content/30 rounded-full btn-sm"
            >
              {l("Edit circle")}</button>
          </:open_btn>
        </Bonfire.UI.Common.OpenModalLive>
      </li>
      <li data-role="delete_circle" class="delete_circle">
        <Bonfire.UI.Common.OpenModalLive
          id="delete_circle"
          title_text={l("Delete this circle")}
          open_btn_wrapper_class="flex flex-1 w-full"
        >
          <div class="mt-4 prose-sm prose">
            <p>{l(
                "The circle will be permanently deleted. This action may affect all the activities that included this circle."
              )}</p>
          </div>
          <:open_btn>
            <button
              type="button"
              class="btn btn-outline normal-case btn-circle !border !border-base-content/30 rounded-full btn-sm"
            ><#Icon iconify="ph:trash-fill" class="w-4 h-4" />
              <span class="sr-only">{l("Delete circle")}</span></button>
          </:open_btn>
          <:action_btns>
            <button
              data-role="confirm_delete_circle"
              type="button"
              :on-click="Bonfire.Boundaries:circle_delete"
              phx-value-go="/boundaries/circles"
              class="normal-case rounded-full btn btn-error btn-sm"
            >
              {l("Delete this circle")}</button>
          </:action_btns>
        </Bonfire.UI.Common.OpenModalLive>
      </li>
    </ul>

    <div x-show="search" x-cloak class="p-2 px-4">
      <form id="edit_circle_participant" :on-change="select">
        <Bonfire.UI.Common.MultiselectLive
          implementation={:live_select}
          form_input_name={Bonfire.Boundaries.Web.CircleLive}
          label={l("Search for users to add")}
        />
      </form>
    </div>
  </div>
  {#if Enum.count(@members) > 0}
    <div class="menu menu divide-y divide-base-content/20 gap-4 px-0 gap-4">
      <!-- row 1 -->
      {#for {id, member} <- @members}
        <div class="flex items-center w-full justify-between p-4">
          <input
            type="hidden"
            name={"circle[encircle][#{id}][circle_id]"}
            value={e(@circle, :id, @circle_id)}
          />
          <input type="hidden" name={"circle[encircle][#{id}][subject_id]"} value={id}>

          <StatelessComponent
            module={maybe_component(Bonfire.UI.Me.ProfileItemLive)}
            profile={e(member, :subject, :profile, nil) || member}
            avatar_class="w-10 h-10  rounded-full"
            character={e(member, :subject, :character, nil) || member}
            show_summary
            show_controls={[]}
          />

          <div class="flex items-center justify-end">
            <button
              data-role="remove_user"
              :if={!@read_only}
              phx-value-subject={id}
              :on-click="remove"
              class="btn !border-base-content/30 btn-outline rounded-full normal-case btn-sm"
            >
              {l("Remove")}
            </button>
          </div>
        </div>
      {/for}
    </div>
  {#else}
    <li id="no-members" class="flex items-center place-content-center">
      <Bonfire.UI.Common.EmptyFeed
        feedback_title={@feedback_title || l("This circle has no members yet")}
        feedback_message={@feedback_message || l("Add some users to get started!")}
      />
    </li>
  {/if}
</div>
