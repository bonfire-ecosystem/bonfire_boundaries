<div>
  <div id="circles_list" class="">
    <div class="px-4 font-bold text-base">{l("Select the circle(s) you want this user to be in")}</div>
    <button
      phx-click={JS.toggle(to: "#circles_list")
      |> JS.toggle(to: "#new_circle_from_modal")}
      class="border-b w-full block text-left mt-1 border-base-content/20 hover:bg-base-content/5 py-3 px-4"
    >
      <div class="flex items-center gap-2 text-primary text-sm font-medium">
        <#Icon solid="Plus" class="w-4 h-4" />
        <span>{l("Create a new circle")}</span>
      </div>
    </button>

    <ul class="menu">
      {#if Enum.empty?(@circles)}
        <Bonfire.UI.Common.EmptyFeed feedback_title={l("You need to create at list one circle")} />
      {#else}
        {#for circle <- e(@circles, [])}
          {#if Enum.any?(e(circle, :encircles, []), fn c -> Map.get(c, :subject_id) == @user_id end)}
            <li
              data-role="remove_from_circle"
              phx-value-id={@user_id}
              phx-value-circle={id(circle)}
              :on-click="remove"
              class="bg-base-content/20"
            >
              <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                  <div class="w-12 h-12 flex place-content-center items-center rounded bg-info/80">
                    <#Icon iconify="fluent:people-list-16-filled" class="w-5 h-5 text-info-content" />
                  </div>
                  <div class="">
                    <div class="flex flex-col">
                      <p class="text-sm font-bold capitalize truncate">{e(circle, :named, :name, nil)}</p>
                      <span class="text-xs font-normal text-base-content/70">{e(circle, :encircles_count, 0)} {l("members")}</span>
                    </div>
                  </div>
                </div>
                <#Icon iconify="fluent:checkmark-16-filled" class="w-4 h-4 text-success mr-2" />
              </div>
            </li>
          {#else}
            <li
              data-role="add_to_circle"
              phx-value-id={@user_id}
              phx-value-circle={id(circle)}
              :on-click="add"
              class=""
            >
              <div class="flex items-center justify-between">
                <div class="flex items-center gap-3">
                  <div class="w-12 h-12 flex place-content-center items-center rounded bg-info/80">
                    <#Icon iconify="fluent:people-list-16-filled" class="w-5 h-5 text-info-content" />
                  </div>
                  <div class="">
                    <div class="flex flex-col">
                      <p class="text-sm font-bold capitalize truncate">{e(circle, :named, :name, nil)}</p>
                      <span class="text-xs font-normal text-base-content/70">{e(circle, :encircles_count, 0)} {l("members")}</span>
                    </div>
                  </div>
                </div>
              </div>
            </li>
          {/if}
        {/for}
      {/if}
    </ul>
  </div>
  <div id="new_circle_from_modal" class="hidden">
    <div class="gap-2 px-3 flex items-center">
      <button
        phx-click={JS.toggle(to: "#new_circle_from_modal")
        |> JS.toggle(to: "#circles_list")}
        type="button"
        class="btn btn-sm btn-ghost btn-circle"
      >
        <#Icon iconify="ion:chevron-back" class="w-5 h-5 text-base-content/70" />
      </button>
      <div class="font-bold text-base">{l("Create a new circle")}</div>
    </div>
    <form
      phx-target={@myself}
      phx-submit={JS.push("circle_create_from_modal")
      |> JS.toggle(to: "#new_circle_from_modal")
      |> JS.toggle(to: "#circles_list")}
      class="px-3"
    >
      <Bonfire.Boundaries.Web.NewCircleLive setting_boundaries={false} />
    </form>
  </div>
</div>
