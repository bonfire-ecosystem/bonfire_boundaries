<ul role="navigation" class={@class}>
  <li>
    <LivePatch
      to={~p"/boundaries/circles"}
      class={
        "",
        active: @selected_tab == "circles"
      }
    >
      <Icon iconify="bx:ShapeCircle" class="inline-block w-5 h-5 mr-2" />
      {l("Circles")}
    </LivePatch>
  </li>

  <li>
    <LivePatch
      to={~p"/boundaries/acls"}
      class={
        "",
        active: @selected_tab == "acls"
      }
    >
      <Icon
        solid="LockClosed"
        class={"mr-2 w-4 h-4 text-base-content/80", "!text-primary": @selected_tab == "acls"}
      />
      {l("Boundaries")}
    </LivePatch>
  </li>

  <li class="!mt-1  menu-title">
    <span class="!text-base !font-medium capitalize">
      {l("Safety")}
    </span>
  </li>

  <li>
    <LivePatch
      to={~p"/boundaries/ghosted"}
      class={
        "",
        active: @selected_tab == "ghosted"
      }
    >
      <Icon
        solid="MinusCircle"
        class={"inline-block w-4 h-4 mr-2 stroke-current", "!text-primary": @selected_tab == "ghosted"}
      />
      {l("Ghosted")}
    </LivePatch>
  </li>
  <li>
    <LivePatch
      to={~p"/boundaries/silenced"}
      class={
        "",
        active: @selected_tab == "silenced"
      }
    >
      <Icon
        solid="VolumeOff"
        class={"inline-block w-4 h-4 mr-2 stroke-current", "!text-primary": @selected_tab == "silenced"}
      />
      {l("Silenced")}
    </LivePatch>
  </li>

  <li class="!mt-1  menu-title">
    <span class="!text-base !font-medium capitalize">
      {l("Instance wide")}
    </span>
  </li>

  <li :if={Bonfire.Boundaries.can?(@__context__, :assign, :instance)}>
    <LivePatch
      to={~p"/boundaries/instance_circles"}
      class={
        "",
        active: @selected_tab == "instance_circles"
      }
    >
      <Icon iconify="bx:ShapeCircle" class="inline-block w-5 h-5 mr-2" />
      {l("Instance Roles / Circles")}
    </LivePatch>
  </li>

  <!-- <li
  :if={Settings.get(:experimental_features_enabled, false, @__context__)}
  >
  <LivePatch 
    to={~p"/boundaries/instance_acls"}
    class={"",  "active": @selected_tab == "instance_acls"}>
    <Icon solid="LockClosed" class={"mr-2 w-4 h-4 text-base-content/80", "!text-primary": @selected_tab == "feed"} />
    {l "Local Boundaries"}
  </LivePatch>
</li> -->

  <li>
    <LivePatch
      to={~p"/boundaries/acl/#{Bonfire.Boundaries.Fixtures.instance_acl()}"}
      class={
        "",
        active: @id == Bonfire.Boundaries.Fixtures.instance_acl()
      }
    >
      <Icon
        iconify="bxs:EditLocation"
        class={"mr-2 w-4 h-4 text-base-content/80", "!text-primary": @selected_tab == "feed"}
      />
      {l("Instance Boundaries")}
    </LivePatch>
  </li>

  <li :if={Bonfire.Boundaries.can?(@__context__, :block, :instance)}>
    <LivePatch
      to={~p"/boundaries/instance_ghosted"}
      class={
        "",
        active: @selected_tab == "instance_ghosted"
      }
    >
      <Icon
        solid="MinusCircle"
        class={"inline-block w-4 h-4 mr-2 stroke-current", "!text-primary": @selected_tab == "extensions"}
      />
      {l("Ghosted instance-wide")}
    </LivePatch>
  </li>
  <li :if={Bonfire.Boundaries.can?(@__context__, :block, :instance)}>
    <LivePatch
      to={~p"/boundaries/instance_silenced"}
      class={
        "",
        active: @selected_tab == "instance_silenced"
      }
    >
      <Icon
        solid="VolumeOff"
        class={"inline-block w-4 h-4 mr-2 stroke-current", "!text-primary": @selected_tab == "extensions"}
      />
      {l("Silenced instance-wide")}
    </LivePatch>
  </li>
</ul>