<div>
  {#if @section == "new"}
    <Bonfire.Boundaries.Web.NewAclLive
      scope={@scope}
      parent_back={@myself}
      event_target={@myself}
      setting_boundaries={@setting_boundaries}
    />
  {#elseif @edit_acl_id}
    <Bonfire.Boundaries.Web.AclLive
      id={@edit_acl_id}
      acl_id={@edit_acl_id}
      parent_back={@myself}
      setting_boundaries={@setting_boundaries}
    />
  {#else}
    <div class={
      "",
      "p-4": !@setting_boundaries
    }>
      <div :if={!@setting_boundaries} class="flex items-center px-2 space-x-9">
        <h2 class="flex-1 text-xs font-semibold tracking-wide uppercase text-base-content/80">{l("Boundaries")}</h2>
        <!-- <Bonfire.Boundaries.Web.NewAclLive event_target={@myself} setting_boundaries={@setting_boundaries} /> -->
        <div :on-click="assign" phx-value-section="new" class="normal-case btn btn-outline btn-sm">
          {l("Create")}
        </div>
      </div>

      <ul class="flex flex-col py-2 space-y-2">
        {#for %{id: acl_id} = acl <- e(@acls, []) ++ e(@built_ins, [])}
          <li class={
            "p-2 rounded hover:bg-base-content/10",
            "border border-base-content/10": !@setting_boundaries,
            "bg-base-content/10": @to_boundaries_ids |> Enum.member?(acl_id)
          }>
            <label
              class="flex items-center w-full"
              phx-click={if @setting_boundaries,
                do:
                  JS.push(
                    if(not Enum.member?(@to_boundaries_ids, acl_id),
                      do: "select_boundary",
                      else: "remove_boundary"
                    ),
                    value: %{
                      id: acl_id,
                      name:
                        e(acl, :named, :name, nil) || e(acl, :stereotyped, :named, :name, nil) || l("Untitled")
                    },
                    target: "#smart_input"
                  )}
            >
              <div class="flex-1">
                <div class="flex items-center space-x-4">
                  <span class="text-2xl" aria-label="boundary icon">{e(acl, :extra_info, :info, :icon, "ðŸ›¡")}</span>
                  <div class="text-base font-semibold">{e(acl, :named, :name, nil) || e(acl, :stereotyped, :named, :name, nil) ||
                      l("Untitled")}</div>
                </div>
                <!-- <div class="text-sm text-base-content/80">
              {if e(acl, :grants_count, nil), do: "#{e(acl, :grants_count, 0)} permissions"} 
              {if e(acl, :controlled_count, nil), do: "#{e(acl, :controlled_count, 0)} uses"} 
            </div> -->
              </div>
              <!-- ACTIONS -->
              <div class="flex ml-4 space-x-2">
                <LiveRedirect
                  :if={!@setting_boundaries}
                  class="btn btn-ghost btn-sm btn-circle"
                  to={~p"/boundaries/acl/" <> acl.id}
                >
                  {#case Acls.is_stereotype?(acl)}
                    {#match true}
                      <Icon outline="InformationCircle" class="w-5 h-5" />
                    {#match _}
                      <Icon solid="Pencil" class="w-4 h-4" />
                  {/case}
                </LiveRedirect>
                <div
                  :if={@setting_boundaries}
                  class="btn btn-ghost btn-sm btn-circle"
                  phx-click="boundary_edit"
                  phx-target={@myself}
                  phx-value-id={acl.id}
                  @click="show_boundary_list = false"
                >
                  {#case Acls.is_stereotype?(acl)}
                    {#match true}
                      <Icon outline="InformationCircle" class="w-5 h-5" />
                    {#match _}
                      <Icon solid="Pencil" class="w-4 h-4" />
                  {/case}
                </div>

                <div
                  :if={@setting_boundaries && not Enum.member?(@to_boundaries_ids, acl_id)}
                  class="btn btn-outline btn-sm btn-circle opacity-80"
                >
                  <Icon solid="Plus" class="w-5 h-5" />
                </div>

                <div
                  :if={@setting_boundaries && @to_boundaries_ids |> Enum.member?(acl_id)}
                  class="btn btn-success btn-sm btn-circle opacity-80"
                >
                  <Icon solid="Minus" class="w-5 h-5" />
                </div>
              </div>
            </label>
            {#if e(acl, :grants_count, 0) > 0}
              {#for {_subject_id, %{subject: subject, verb_grants: verb_grants}} <-
                  AclLive.subject_verb_grant(e(acl, :grants, [])) |> Enum.slice(0..5)}
                <div class="flex justify-between px-2 pt-2 mt-2 -mx-2 text-sm border-t border-base-content/30">
                  <span>{e(subject, :named, :name, nil) || e(subject, :stereotyped, :named, :name, nil) ||
                      e(subject, :name, nil) || e(subject, :profile, :name, nil) ||
                      e(subject, :character, :username, nil) || ulid(subject)}</span>
                  <div class="flex items-center space-x-1">
                    {#for {verb_id, grant} <- verb_grants}
                      {#case Bonfire.Boundaries.Verbs.get(verb_id)}
                        {#match nil}
                        {#match verb}
                          <div
                            class={
                              "flex items-center normal-case btn btn-outline place-content-center btn-xs btn-square tooltip tooltip-top cursor-normal",
                              "btn-success": Map.get(grant, :value),
                              "btn-error": !Map.get(grant, :value)
                            }
                            data-tip={if(Map.get(grant, :value), do: l("Can"), else: l("Cannot")) <> " " <> e(verb, :verb, "")}
                          >
                            <Icon
                              iconify={e(verb, :icon, "heroicons-solid:QuestionMarkCircle")}
                              class="w-4 h-4"
                              fill="currentColor"
                            />
                          </div>
                      {/case}
                    {/for}
                  </div>
                </div>
              {/for}
            {/if}
          </li>
        {/for}
      </ul>
      <div
        :if={@setting_boundaries}
        :on-click="assign"
        @click="show_boundary_list = false"
        phx-value-section="new"
        class="flex items-center p-2 space-x-4 cursor-pointer hover:bg-base-content/10"
      >
        <div class="btn btn-outline btn-sm btn-circle opacity-80">
          <Icon solid="Plus" class="w-5 h-5" />
        </div>
        <div class="flex-1">
          <div class="text-base font-normal">{l("Define a new boundary")}</div>
        </div>
        <div class="btn btn-ghost btn-sm btn-circle opacity-80">
          <Icon solid="ChevronRight" class="w-5 h-5" />
        </div>
      </div>
    </div>
  {/if}
</div>