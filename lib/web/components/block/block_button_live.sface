

{#if !@my_block}
  <Bonfire.UI.Common.OpenModalLive
    no_actions
    id={"block-#{@parent_id}-#{id(@object)}-#{@type}"}
    title_text={l("%{type} %{user_or_instance_name}", type: @type, user_or_instance_name: @label)}
  >
    <!-- <input type="hidden" name="id" value={e(@object, :id, @object)}> -->
    <div class="mt-3 text-sm">{l(
        "When you feel unsafe, or you tried discussing or flagging problematic people or content and it went nowhere, or you simply came across spam or trolls, you can always resort to blocking."
      )}</div>
    <div class="flex flex-col mt-3">
    {#if @type == "silence"}
      <div class="border border-base-content/30 rounded p-2">
        <div class="text-sm">{l("By silencing %{user_or_instance_name}, you will stop seeing things they publish", user_or_instance_name: @label)}</div>
        <div x-data="{active: false}" role="region" class="text-base-content">
          <button
            type="button"
            x-on:click="active = ! active"
            :aria-expanded="active"
            class="flex mt-1 items-center w-full font-semibold text-sm"
          >
            <span x-show="!active" class="underline">{l("Read more")}</span>
            <span x-show="active" class="underline">{l("Read less")}</span>
            <span x-show="active" aria-hidden="true" class="ml-2">&minus;</span>
            <span x-show="!active" aria-hidden="true" class="ml-2">&plus;</span>
          </button>
          <div x-show="active" x-collapse>
            <div class="block mt-3">
              <ul class="block pl-4 mt-1 prose-sm list-disc">
                <li>
                  {l("You won't see anything they write/create in feeds.")}
                </li>
                <li>
                  {l("You will still be able to view their profile or read their posts using direct links.")}
                </li>
                <li>
                  {l("You won't see any @ mentions or messages they send you.")}
                </li>
                <li>
                  {l("You won't be able to follow them.")}
                </li>
                <li>
                  {l("You will be able to undo this later but may not be able to see any activities you missed.")}
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      {#if Bonfire.Boundaries.Blocks.is_blocked?(@object, :silence, current_user: @current_user)}
        <div class="alert mt-3 shadow-lg">
          <div>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-info flex-shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
            <span>{l "%{user_or_instance_name} is already silenced",  user_or_instance_name: @label}</span>
          </div>
        </div>
         <button 
          :if={!Bonfire.Boundaries.Blocks.is_blocked?(@object, :silence, :instance_wide)}
          :on-click={JS.push("Bonfire.UI.Common.OpenModalLive.close()") |>  JS.push("Bonfire.Social.Block:unsilence")}
          phx-value-id={e(@object, :id, @object)}
          type="button" 
          class="btn mt-3 btn-warning normal-case">{l "Unsilence"}
        </button>
      {#else}
      <button 
        :on-click={JS.push("Bonfire.UI.Common.OpenModalLive.close()") |>  JS.push("Bonfire.Social.Block:silence")}
        phx-value-id={e(@object, :id, @object)}
        type="button" 
        class="btn mt-3 btn-warning normal-case">{l "Silence"}
      </button>
      {/if}
      <div 
        :if={Bonfire.Me.Users.is_admin?(@current_user) ||
        Bonfire.Boundaries.can?(@__context__, :block, :instance)}
        class="flex flex-col p-2 mt-6 space-y-3 border rounded border-error/30 bg-error/5">
        <div class="">
          <div class="text-base font-semibold text-error-content">{l("Super powers")}</div>
          <p class="mt-0 text-sm text-error-content">
            {l("You can enforce the silence for all users of your instance. All local users will stop seeing %{user_or_instance_name} or their content",
                user_or_instance_name: @label
              )}
          </p>
        </div>
         {#if Bonfire.Boundaries.Blocks.is_blocked?(@object, :silence, :instance_wide)}
          <div class="alert mt-3 shadow-lg">
            <div>
              <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-info flex-shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
              <span>{l "%{user_or_instance_name} is already silenced instance-wide",  user_or_instance_name: @label}</span>
            </div>
          </div>
          <button 
            :on-click={JS.push("Bonfire.UI.Common.OpenModalLive.close()") |>  JS.push("Bonfire.Social.Block:unsilence_instance_wide")}
            phx-value-id={e(@object, :id, @object)}
            class="btn btn-error btn-outline normal-case">{l "Unsilence instance-wide"}</button>
        {#else}
          <button 
            :on-click={JS.push("Bonfire.UI.Common.OpenModalLive.close()") |>  JS.push("Bonfire.Social.Block:silence_instance_wide")}
            phx-value-id={e(@object, :id, @object)}
            class="btn btn-error btn-outline normal-case">{l "Silence instance-wide"}</button>
        {/if}
      </div>
    {#else}
      <div class="border border-base-content/30 rounded p-2">
        <div class="text-sm">{l("By ghosting %{user_or_instance_name}, you will prevent them from seeing or interacting with you or your content", user_or_instance_name: @label)}</div>
        <div x-data="{active: false}" role="region" class="text-base-content">
          <button
            type="button"
            x-on:click="active = ! active"
            :aria-expanded="active"
            class="flex mt-1 items-center w-full font-semibold text-sm"
          >
            <span x-show="!active" class="underline">{l("Read more")}</span>
            <span x-show="active" class="underline">{l("Read less")}</span>
            <span x-show="active" aria-hidden="true" class="ml-2">&minus;</span>
            <span x-show="!active" aria-hidden="true" class="ml-2">&plus;</span>
          </button>
          <div x-show="active" x-collapse>
            <div class="block mt-3">
              <ul class="block pl-4 mt-1 prose-sm list-disc">
                <li>
                  {l("Nothing you post privately will be shown to them from now on.")}
                </li>
                <li>
                  {l("They will still be able to see things you post publicly.")}
                </li>
                <li>
                  {l("You won't be able to @ mention or message them.")}
                </li>
                <li>
                  {l("They won't be able to follow you.")}
                </li>
                <li>
                  {l(
                    "You will be able to undo this later but they may not be able to see any activities they missed."
                  )}
                </li>
              </ul>
            </div>
          </div>
        </div>
      </div>
      {#if Bonfire.Boundaries.Blocks.is_blocked?(@object, :ghost, current_user: @current_user)}
        <div class="alert mt-3 shadow-lg">
          <div>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-info flex-shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
            <span>{l "%{user_or_instance_name} is already ghosted",  user_or_instance_name: @label}</span>
          </div>
        </div>
        <button  
        :if={!Bonfire.Boundaries.Blocks.is_blocked?(@object, :ghost, :instance_wide)}
        :on-click={JS.push("Bonfire.UI.Common.OpenModalLive.close()") |>  JS.push("Bonfire.Social.Block:unghost")}
        phx-value-id={e(@object, :id, @object)} 
        type="button" 
        class="btn mt-3 btn-warning normal-case">{l "Unghost"}</button>
      {#else}
      <button  
        :on-click={JS.push("Bonfire.UI.Common.OpenModalLive.close()") |>  JS.push("Bonfire.Social.Block:ghost")}
        phx-value-id={e(@object, :id, @object)} 
        type="button" 
        class="btn mt-3 btn-warning normal-case">{l "Ghost"}</button>
      {/if}
       <div 
        :if={Bonfire.Me.Users.is_admin?(@current_user) ||
        Bonfire.Boundaries.can?(@__context__, :block, :instance)}
        class="flex flex-col p-2 mt-6 space-y-3 border rounded border-error/30 bg-error/5">
        <div class="">
          <div class="text-base font-semibold text-error-content">{l("Super powers")}</div>
          <p class="mt-0 text-sm text-error-content">
            {l("You can enforce the ghost for all users of your instance. Prevent %{user_or_instance_name} from seeing or interacting with all local users",
                user_or_instance_name: @label
              )}
          </p>
        </div>
        
         {#if Bonfire.Boundaries.Blocks.is_blocked?(@object, :ghost, :instance_wide)}
         <div class="alert mt-3 shadow-lg">
          <div>
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-info flex-shrink-0 w-6 h-6"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
            <span>{l "%{user_or_instance_name} is already ghosted instance-wide",  user_or_instance_name: @label}</span>
          </div>
        </div>
        <button 
            :on-click={JS.push("Bonfire.UI.Common.OpenModalLive.close()") |>  JS.push("Bonfire.Social.Block:unghost_instance_wide")}
            phx-value-id={e(@object, :id, @object)}
            class="btn btn-error btn-outline normal-case">{l "Unghost instance-wide"}</button>
        {#else}
          <button 
            :on-click={JS.push("Bonfire.UI.Common.OpenModalLive.close()") |>  JS.push("Bonfire.Social.Block:ghost_instance_wide")}
            phx-value-id={e(@object, :id, @object)}
            class="btn btn-error btn-outline normal-case">{l "Ghost instance-wide"}</button>
        {/if}
      </div>

    {/if}
    </div>

    <:open_btn>
      <div class={e(@class, "btn btn-sm flex items-center gap-2 btn-outline rounded-full")}>
        <#Icon :if={@type == "ghost"} iconify="mingcute:ghost-fill" class="w-4 h-4 stroke-1 text-base-content/80" />
        <#Icon :if={@type == "silence"} iconify="heroicons-solid:volume-off" class="w-4 h-4 stroke-1 text-base-content/80" />
        <span :if={!@hide_text} class="text-left truncate ellipsis">
          {@open_btn_label || l("Block %{user_or_instance_name}", user_or_instance_name: @label)}
        </span>
      </div>
    </:open_btn>

    <!-- <:action_btns>
      <button data-id="block" type="submit" class="normal-case rounded btn btn-error btn-sm">
        <span class="text-left truncate ellipsis">{l("Block %{user_or_instance_name}", user_or_instance_name: @label)}</span>
      </button>
    </:action_btns> -->
  </Bonfire.UI.Common.OpenModalLive>
{#else}
  <div>
    <button
      data-id="unblock"
      :on-click="Bonfire.Boundaries:unblock"
      phx-value-id={e(@object, :id, @object)}
      phx-value-block_type={@block_type}
      phx-value-scope={@scope}
      type="button"
      class={e(@class, "btn btn-sm btn-outline normal-case rounded-full")}
    >
      <#Icon
        outline="CheckCircle"
        :if={@scope != "instance_wide"}
        class="w-4 h-4 mr-2 shrink-0 text-bas-content text-opacity-70"
      />
      <#Icon
        outline="LockOpen"
        :if={@scope == "instance_wide"}
        class="w-4 h-4 mr-2 shrink-0 text-bas-content text-opacity-70"
      />

      <span class="truncate ellipsis">{l("Unblock %{user_or_instance_name}", user_or_instance_name: @label)}</span>
    </button>
  </div>
{/if}
