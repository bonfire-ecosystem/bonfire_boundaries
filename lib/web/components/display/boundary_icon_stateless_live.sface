<div
  :if={not is_atom(@object_boundary) or @object_boundary == false or not is_nil(@boundary_tuple)}
  class={@class}
>
  {#case @boundary_tuple || Bonfire.Boundaries.preset_boundary_from_acl(@object_boundary)}
    {#match {"public", _}}
      <span
        title={l("Public")}
        class={
          "flex items-center gap-1",
          "align-bottom": @with_label != true,
          "flex items-center gap-2": @with_label == true
        }
      >
        <Icon :if={@with_icon} solid="Globe" class="w-4 h-4 text-base-content/50" />
        <span
          :if={@with_label}
          class={"text-sm normal-case", "btn btn-sm btn-outline border-base-content/30": @with_icon != true}
        >{l("Public")}</span>
      </span>
    {#match {"local", _}}
      <span
        title={l("Local")}
        class={
          "flex items-center gap-1",
          "align-bottom": @with_label != true,
          "flex items-center gap-2": @with_label == true
        }
      >
        <Icon :if={@with_icon} solid="Home" class="w-4 h-4 text-base-content/50" />
        <span
          :if={@with_label}
          class={"text-sm normal-case", "btn btn-sm btn-outline border-base-content/30": @with_icon != true}
        >{l("Local")}</span>
      </span>
    {#match {{name, extra}, {_, _} = preset_boundary}}
      <div class="flex items-center gap-3 normal-case">
        <Bonfire.Boundaries.Web.BoundaryIconStatelessLive
          boundary_tuple={preset_boundary}
          with_icon
          with_label={false}
        />

        <div id={Pointers.ULID.generate()} phx-hook="Popup">
          <div class="tippy">
            {#case name}
              {#match "Caretaker"}
              <Icon iconify="material-symbols:vpn-key-rounded" class="w-4 h-4 text-base-content/50" />
              {#match "Read"}
              <Icon iconify="ic:baseline-remove-red-eye" class="w-4 h-4 text-base-content/50" />
              {#match "Interact"}
              <Icon iconify="heroicons:chat-bubble-left-right-solid" class="w-4 h-4 text-base-content/50" />
              {#match "Custom"}
              <Icon iconify="material-symbols:settings" class="w-4 h-4 text-base-content/50" />
              {#match _}
              <Icon iconify="material-symbols:settings" class="w-4 h-4 text-base-content/50" />
            {/case}
          </div>
          <div class="template" style="display: none;">
            <div class="flex p-2 bg-neutral rounded shadow max-w-[200px] items-start gap-2">
              <div class="flex items-start gap-2">
                <Icon iconify="noto-v1:check-mark" class="w-4 h-4" />
                <div class="flex flex-col gap-1">
                  <div class="text-xs">{if is_list(extra), do: Enum.join(extra, ", "), else: extra}</div>
                  <div class="normal-case rounded btn btn-xs">read more</div>
                </div>
              </div>
            </div>
          </div>
        </div>


        <!-- {#case name}
          {#match "Caretaker"}
          <Icon iconify="material-symbols:vpn-key-rounded" class="w-4 h-4 text-accent" />
          {#match "Read"}
          <Icon iconify="ic:baseline-remove-red-eye" class="w-4 h-4 text-accent" />
          {#match "Interact"}
          <Icon iconify="heroicons:chat-bubble-left-right-solid" class="w-4 h-4 text-accent" />
          {#match "Custom"}
          <Icon iconify="material-symbols:settings" class="w-4 h-4 text-base-content/50" />
          {#match _}
          <Icon iconify="material-symbols:settings" class="w-4 h-4 text-base-content/50" />
        {/case}

        <div id={Pointers.ULID.generate()} phx-hook="Popup">
          <div class="text-sm tippy bg-gradient-to-r from-accent to-accent/60 text-accent-content px-2 py-0.5 rounded shadow font-medium">{name}</div>
          <div class="template" style="display: none;">
            <div class="flex p-2 bg-neutral rounded shadow max-w-[200px] items-start gap-2">
              <div class="flex items-start gap-2">
                <Icon iconify="noto-v1:check-mark" class="w-4 h-4" />
                <div class="flex flex-col gap-1">
                  <div class="text-xs">{if is_list(extra), do: Enum.join(extra, ", "), else: extra}</div>
                  <div class="normal-case rounded btn btn-xs">read more</div>
                </div>
              </div>
            </div>
          </div>
        </div> -->
      </div>
    {#match {name, extra}}
      <div class="flex items-center gap-3 normal-case">
        <div id={Pointers.ULID.generate()} phx-hook="Popup">
          <div class="tippy">
            {#case name}
              {#match "Caretaker"}
              <Icon iconify="material-symbols:vpn-key-rounded" class="w-4 h-4 text-base-content/50" />
              {#match "Read"}
              <Icon iconify="ic:baseline-remove-red-eye" class="w-4 h-4 text-base-content/50" />
              {#match "Interact"}
              <Icon iconify="heroicons:chat-bubble-left-right-solid" class="w-4 h-4 text-base-content/50" />
              {#match "Custom"}
              <Icon iconify="material-symbols:settings" class="w-4 h-4 text-base-content/50" />
              {#match _}
              <Icon iconify="material-symbols:settings" class="w-4 h-4 text-base-content/50" />
            {/case}
          </div>
          <div class="template" style="display: none;">
            <div class="flex p-2 bg-neutral rounded shadow max-w-[200px] items-start gap-2">
              <div class="flex items-start gap-2">
                <Icon iconify="noto-v1:check-mark" class="w-4 h-4" />
                <div class="flex flex-col gap-1">
                  <div class="text-xs">{if is_list(extra), do: Enum.join(extra, ", "), else: extra}</div>
                  <div class="normal-case rounded btn btn-xs">read more</div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- <Icon :if={@with_icon} solid="Cog" class="w-4 h-4" /> -->
        <!-- <div id={Pointers.ULID.generate()} phx-hook="Popup">
          <div class="text-sm tippy">{name}</div>
          <div class="template" style="display: none;">
            <div class="flex p-2 bg-neutral rounded shadow max-w-[200px] items-start gap-2">
              <Icon iconify="noto-v1:check-mark" class="w-4 h-4" />
              <div class="flex flex-col gap-1">
                <div class="text-xs">{if is_list(extra), do: Enum.join(extra, ", "), else: extra}</div>

                <Bonfire.UI.Common.OpenModalLive
                  id={Pointers.ULID.generate()}
                  title_text={l("Delete this circle")}
                >
                  {l(
                    "The circle will be permanently deleted. This action may affect all the activities that included this circle."
                  )}
                  <:open_btn>
                    <button class="normal-case rounded btn btn-xs">read more</button>
                  </:open_btn>
                </Bonfire.UI.Common.OpenModalLive>
              </div>
            </div>
          </div>
        </div> -->
      </div>
    {#match _}
      <span
        title={e(@object_boundary, :name, "Custom Boundaries")}
        class={
          "flex items-center gap-1",
          "align-bottom tooltip tooltip-bottom z-20": @with_label != true,
          "flex items-center gap-2": @with_label == true
        }
      >
        <Icon :if={@with_icon} solid="Cog" class="w-4 h-4" />
        <span
          :if={@with_label}
          class={"text-sm normal-case", "btn btn-sm btn-outline border-base-content/30": @with_icon != true}
        >{l("Custom Boundaries")}</span>
      </span>
  {/case}
</div>
