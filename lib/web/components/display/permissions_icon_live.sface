<li
  :if={not is_atom(@object_boundary) or @object_boundary == false or not is_nil(@boundary_tuple)}
  class={@class}
>
  {#case @boundary_tuple || Bonfire.Boundaries.Roles.preset_boundary_role_from_acl(@object_boundary)}
    {#match {name, extra} = _role}
      <!-- id={"permissions_icon-#{@parent_id}-#{@object_id}"} -->
      <Bonfire.UI.Common.OpenModalLive
        id={ComponentID.new(Bonfire.UI.Common.OpenModalLive, "#{@parent_id}-#{@object_id}", __MODULE__)}
        no_actions
        open_btn_wrapper_class="!py-1 !px-3"
      >
        <div class="">
          <div class="flex items-center gap-2">
            <div class="text-base font-medium">{name || l("Custom")}</div>
          </div>
          {#if name in ["Caretaker", "Administer"]}
            <div class="gap-2 mt-4">
              <div class="w-full prose-sm prose">{l(
                  "As caretaker you have full control over this, including the right to perform any action on it, and to set its boundaries."
                )}</div>
            </div>
          {#else}
            <div class="p-4 my-6 rounded-md bg-info/10">
              <div class="flex">
                <div class="flex-shrink-0">
                  <#Icon solid="InformationCircle" class="w-5 h-5 text-info" />
                </div>
                <div class="flex-1 ml-3 md:flex md:justify-between">
                  <p class="text-sm text-info">
                    {l(
                      "These permissions are set by the activity Caretaker. They specify which actions you can perform on this activity."
                    )}</p>
                </div>
              </div>
            </div>
            <div class="gap-2 mt-4">
              <div class="mb-4 text-xs font-light tracking-wider uppercase text-base-content/70">{l("Allowed actions")}</div>
              <div class="">
                <div :for={verb_name <- extra} class="flex items-center gap-3 mb-3">
                  {#case Bonfire.Boundaries.Verbs.get(verb_name)}
                    {#match nil}
                      <#Icon iconify="mingcute:hat-fill" class="w-4 h-4 text-secondary-content/70" />
                      <div class="text-sm font-medium traking-wide text-base-content/70">{verb_name}</div>
                    {#match verb}
                      <Iconify.iconify
                        icon={e(verb, :icon, "")}
                        class="w-4 h-4 text-base-content/70"
                        fill="currentColor"
                      />
                      <div class="text-sm font-medium traking-wide text-base-content/70">{e(verb, :verb, nil) || verb_name}</div>
                      <div class="text-xs text-base-content/70">{e(verb, :summary, nil)}</div>
                  {/case}
                </div>
              </div>
            </div>
          {/if}
        </div>
        <:open_btn>
          <div class="flex items-center w-full gap-3">
            <#Icon iconify="icon-park-solid:sorcerer-hat" class="w-5 h-5 text-info/80" />
            <div class="">
              <span class="text-xs font-semibold tracking-wider text-center uppercase text-base-content/80">{name || l("Custom")}</span>
              <div class="text-xs text-base-content/80">{l("Details")}</div>
            </div>
          </div>
        </:open_btn>
      </Bonfire.UI.Common.OpenModalLive>
      <!-- </div> -->
      <!-- <div class="template" style="display: none;">
          <div class="flex p-2 bg-neutral rounded shadow max-w-[200px] items-start gap-2">
            <div class="flex items-start gap-2">
              <div class="flex flex-col gap-1 text-center">
                <div class="text-sm font-medium text-neutral-content/80">{name}</div>
                <Bonfire.UI.Common.OpenModalLive id={"permissions_details-#{@parent_id}"} title_text={l("Boundary details")}>
                  <div class="text-sm">{if is_list(extra), do: Enum.join(extra, ", "), else: extra}</div>
                  <:open_btn>
                    <button type="button" class="normal-case rounded btn btn-info btn-xs">
                      {l("View details")}
                    </button>
                  </:open_btn>
                </Bonfire.UI.Common.OpenModalLive>
              </div>
            </div>
          </div>
        </div> -->
    {#match _}
      <div />
  {/case}
</li>
