<div class="">
  <div>
    <div class="flex flex-col">
      <div class="p-4 rounded-md bg-info/10">
        <div class="flex">
          <div class="flex-shrink-0">
            <#Icon solid="InformationCircle" class="w-5 h-5 text-info" />
          </div>
          <div class="flex-1 ml-3 md:flex md:justify-between">
            <p class="text-sm text-info">
              {l("Roles define sets of permissions which you can assign to users and circles")}</p>
          </div>
        </div>
      </div>
      <div :if={@scope_type in [:group, Bonfire.Classify.Category]} class="mt-3 flex-shrink-0">
        <Bonfire.Boundaries.Web.NewRoleButtonLive
          scope={@scope}
          scope_type={@scope_type}
          event_target={@myself}
        />
      </div>
    </div>
    <div class="m-4">
      <ul role="list" class="flex flex-col gap-2">
        <li
          class="rounded-box border border-base-content/20"
          x-data="{open: false}"
          :for={{name, role} <- @role_verbs || []}
        >
          <Bonfire.Boundaries.Web.RoleDetailsLive
            name={to_string(e(role, :name, nil) || name)}
            role={role}
            read_only={e(role, :read_only, false)}
            available_verbs={@available_verbs}
            all_verbs={@all_verbs}
            event_target={@myself}
            scope={@scope}
          />
        </li>

        <!-- <li class="" x-data="{open: false}" :for={{name, role} <- debug(@cannot_role_verbs || [])}>
          <Bonfire.Boundaries.Web.RoleDetailsLive
            default_value={false}
            name={l("Cannot") <> " " <> to_string(e(role, :name, nil) || name)}
            role={role}
            read_only={e(role, :read_only, false)}
            available_verbs={@available_verbs}
            all_verbs={@all_verbs}
            event_target={@myself}
          />
        </li> -->
      </ul>
    </div>

    <style>
      .boundaries-switches label div.btn {
      color: hsl(var(--bc));
      }
      .boundaries-switches label input:checked ~ div.btn-yes {
      color: hsl(var(--pc));
      background: hsl(var(--su) / 0.90);
      }
      .boundaries-switches label input:checked ~ div.btn-no {
      color: hsl(var(--pc));
      background: hsl(var(--er) / 0.90);
      }
      .boundaries-switches label input:checked ~ div.btn-maybe {
      background: white;
      color: black;
      }
    </style>
  </div>
</div>
