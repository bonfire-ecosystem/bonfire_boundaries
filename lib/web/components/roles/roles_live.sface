<div class="">

  <div class="p-4 mb-0 rounded-md bg-info/10">
    <div class="flex">
      <div class="flex-shrink-0">
        <Icon solid="InformationCircle" class="w-5 h-5 text-info" />
      </div>
      <div class="flex-1 ml-3 md:flex md:justify-between">
        <p class="text-sm text-info">
          {l("Roles are a way to group permissions together. You can assign roles to users and circles.")}</p>
      </div>
    </div>
  </div>


  <div class="mt-4 divide-y rounded-lg bg-base-content/5 divide-base-300">
    <div
      :for={{name, verbs} <- Bonfire.Boundaries.Verbs.role_verbs()}
      :if={verbs != []}
      x-data="{open: false}"
      class="p-3"
    >
      <div class="flex items-center justify-between">
        <div class="flex flex-col gap-1">
          <div class="text-sm font-bold capitalize">{name}</div>
        </div>
        <button
          type="button"
          x-on:click="open = !open"
          x-text="open ? 'Hide details' : 'See details'"
          class="normal-case btn btn-sm"
        >{l("Expand")}</button>
      </div>
      <div x-cloak x-show="open" x-collapse>
        <div class="mt-3 rounded-xl bg-base-300">
          <!-- <span class="block px-4 pt-2 text-xs font-medium tracking-wide uppercase rounded-t-xl bg-base-300 text-base-content/70">{l("Permissions")}</span> -->
          <ul class="flex flex-col divide-y divide-base-300">
            <li :for={verb <- verbs} class="flex items-center justify-between gap-8 p-3">
              <div class="flex flex-col gap-0.5">
                {#case Bonfire.Boundaries.Verbs.get(verb)}
                  {#match nil}
                    <div class="flex-1 text-sm font-semibold capitalize">
                      {verb}
                    </div>
                  {#match verb_details}
                    <div class="flex items-center gap-2">
                      <!-- <Icon
                      iconify={e(verb_details, :icon, "Heroicons-Solid:QuestionMarkCircle")}
                      class="w-4 h-4 text-base-content/70"
                      fill="currentColor"
                    /> -->
                      <div class="flex-1 text-sm font-semibold capitalize">
                        {e(verb_details, :verb, nil) || verb}
                      </div>
                    </div>
                    <div class="text-xs text-base-content/70">{e(verb_details, :summary, nil)}</div>
                {/case}
              </div>
              <Bonfire.Boundaries.Web.YesMaybeFalseLive value read_only />

            </li>
          </ul>
        </div>
      </div>
    </div>
  </div>

  <style>
    .boundaries-switches label div.btn {
    color: hsl(var(--bc));
    }
    .boundaries-switches label input:checked ~ div.btn-yes {
    color: hsl(var(--su) / 0.90);
    }
    .boundaries-switches label input:checked ~ div.btn-no {
    color: hsl(var(--er) / 0.90);
    }
    .boundaries-switches label input:checked ~ div.btn-maybe {
    background: white;
    color: black;
    }
  </style>
</div>
