<div class="flex w-full flex-1 h-full gap-2 p-2 px-4 items-top">
  <!-- <#Icon
    iconify="carbon:subnet-acl-rules"
    class="w-5 h-5 mx-1 mt-2 shrink-0 text-base-content/70"
  /> -->

  <div class="flex flex-col relative h-full multiselect_in_composer flex-1 min-h-[376px]">
    <div
      x-data="{
        open: false
      }"
      class="bg-primary/10 rounded-box p-4"
    >
      <div class="font-bold mb-3 text-sm">{l("General permissions")}</div>
      <div class="flex items-center justify-between">
        <div class="flex items-center gap-3 font-semibold">
          <Bonfire.Boundaries.Web.BoundariesPresetNameLive to_boundaries={@to_boundaries} />
        </div>
        <button
          x-show="!open"
          type="button"
          x-on:click="open = !open"
          type="button"
          class="btn btn-sm !border-base-content/30 !border btn-outline rounded-full normal-case"
        >
          {l("Customize")}
        </button>
        <button
          x-show="open"
          type="button"
          x-on:click="open = !open"
          c
          class="btn btn-sm !border-base-content/30 !border btn-outline rounded-full normal-case"
        >
          {l("Collapse")}
        </button>
      </div>
      <div x-show="open" x-cloak x-collapse>
        <div class="flex flex-col gap-3">
          <!-- HERE GOES THE boundary_items_live for default boundaries -->
        </div>
      </div>
    </div>

    <div class="flex items-center mt-8 mb-4 justify-between">
      <div class="font-bold flex-1 text-sm">{l("Specific permissions")}</div>
      <button
        type="button"
        phx-click={JS.toggle(to: "#extra_boundaries") |> JS.toggle(to: "#roles_detail")}
        class="btn !border-base-content/30 !border btn-outline rounded-full btn-sm normal-case text-sm font-medium flex items-center gap-2"
      >
        <#Icon iconify="mingcute:hat-fill" class="w-4 h-4" />
        <span>{l("View roles")}</span>
      </button>
    </div>
    <div class="flex flex-col gap-2">
      <div class="collapse !overflow-visible collapse-arrow bg-base-100">
        <input type="radio" name="my-accordion-2" checked="checked">
        <div class="collapse-title  text-sm font-medium">
          <div class="flex items-center gap-3">
            <span class="w-8 h-8 bg-info/10 rounded-full flex items-center place-content-center">
              <#Icon iconify="mingcute:user-add-2-fill" class="w-5 h-5 text-info" />
            </span>
            <span>{l("Add users or circles")}</span>
          </div>
        </div>
        <div class="collapse-content">
          <Bonfire.UI.Common.MultiselectLive
            implementation={:live_select}
            form_input_name={__MODULE__}
            preloaded_options={list_my_circles(@__context__)}
            label="Select one or more circles or people"
          />

          <Bonfire.Boundaries.Web.BoundaryItemsLive to_boundaries={[]} to_circles={@to_circles} />
        </div>
      </div>
      <div class="collapse !overflow-visible  collapse-arrow bg-base-100">
        <input type="radio" name="my-accordion-2">
        <div class="collapse-title text-sm font-medium">
          <div class="flex items-center gap-3">
            <span class="w-8 h-8 bg-info/10 rounded-full flex items-center place-content-center">
              <#Icon iconify="mingcute:user-remove-2-fill" class="w-5 h-5 text-info" />
            </span>
            <span>{l("Exclude users or circles")}</span>
          </div>
        </div>
        <div class="collapse-content">
          <p>hello</p>
        </div>
      </div>
    </div>

    <!-- <div class="flex gap-2 py-2 scrollable">
        {#for acl <- Bonfire.Boundaries.Acls.list_my(current_user(@__context__))
          |> Enum.map(fn
            %Bonfire.Data.AccessControl.Acl{} = acl ->
            %{
              id: e(acl, :id, nil),
              field: :to_boundaries,
              name: e(acl, :named, :name, nil) || e(acl, :sterotyped, :named, :name, nil)
            } end)
          |> Enum.filter(fn acl -> acl[:name] != nil end)
        }
          <button 
            :key={e(acl, :id, nil)}
            type="button" 
            class="btn hover:bg-base-content hover:!text-base-300 btn-xs !max-h-[1.75rem] !min-h-[1.75rem] !h-[1.75rem] rounded font-normal capitalize bg-base-content/10 text-base-content/70 feed_tab border-none">
            {e(acl, :name, nil)}
          </button>
        {/for}
      </div> -->
    <!-- </div> -->

    <!-- <Bonfire.UI.Common.ProfileItemLive
      wrapper_class="flex items-center justify-between"
      profile={e(current_user(@__context__), :profile, %{name: l("Me")})}
      character={e(current_user(@__context__), :character, nil)}
      show_controls={[]}
    >
      <div class="flex items-center gap-2">
        <button disabled class="normal-case btn btn-sm btn-outline btn-disabled">{l("Caretaker")}</button>
      </div>
    </Bonfire.UI.Common.ProfileItemLive> -->

    <!-- Next already-choosen boundaries or Circles/Users -->
    <!-- <Bonfire.Boundaries.Web.BoundariesGeneralAccessLive preset_boundary={@preset_boundary} /> -->
    <Bonfire.Boundaries.Web.BoundaryComposerActionsLive />
    <!-- </div>
</div> -->
  </div>
</div>