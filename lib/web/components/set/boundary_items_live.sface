<div class="flex flex-wrap">
  <div
    :for={{id, data} <- Bonfire.Boundaries.Web.SetBoundariesLive.reject_presets(@to_boundaries || [])}
    class="mt-2 mr-2 flex items-center justify-between"
  >
    <div class="flex items-center gap-3 grow">
      <span class="flex items-center w-8 h-8 rounded place-content-center bg-base-content/5">
        <#Icon solid="LockClosed" class="inline-block w-5 h-5 text-base-content/70" />
      </span>
      <div class="text-sm font-medium text-base-content">{e(data, :name, nil) || if is_tuple(data), do: elem(data, 1), else: data}</div>
    </div>

    <div class="flex items-center gap-1">
      <Bonfire.Boundaries.Web.BoundaryDetailsModalLive
        id={id}
        name={e(data, :name, nil) || if is_tuple(data), do: elem(data, 1), else: data}
      />
      <div
        phx-click={JS.push("Bonfire.Boundaries:remove_boundary",
          value: %{id: id, name: e(data, :name, nil) || if(is_tuple(data), do: elem(data, 1), else: data)},
          target: "#smart_input"
        )}
        class="rounded btn btn-sm btn-ghost btn-square opacity-80"
      >
        <#Icon solid="Trash" class="w-4 h-4 text-base-content/70" />
      </div>
    </div>
  </div>

  <div
    :for={{data, id} <- @to_circles || []}
    class="mt-2 mr-2 inline-flex items-center border border-base-content/30"
  >
    {#case data}
      {#match %{"icon" => _}}
        <p class="text-sm truncate max-w-[200px] pl-1.5 text-base-content">
          {e(data, :name, "Anon")}
        </p>
        <!-- <Bonfire.UI.Common.ProfileItemLive inline profile={data} character={data} show_controls={[]} /> -->
      {#match _ when is_binary(data)}
        <div class="flex items-center gap-3 grow">
          <!-- <span class="flex items-center w-8 h-8 rounded place-content-center bg-base-content/5">
            <#Icon iconify="material-symbols:group" class="inline-block w-5 h-5 text-base-content/70" />
          </span> -->
          <div class="text-sm font-medium text-base-content">{data}</div>
        </div>
      {#match _}
        <div class="flex items-center gap-3 grow">
          <!-- <span class="flex items-center w-8 h-8 rounded place-content-center bg-base-content/5">
            <#Icon iconify="material-symbols:group-work" class="inline-block w-5 h-5 text-base-content/70" />
          </span> -->
          <div class="text-sm font-medium pl-1.5 text-base-content">{e(data, :name, nil) || l("Unknown circle or user")}</div>
        </div>
    {/case}
    <div
      phx-click={JS.push("Bonfire.Boundaries:remove_circle",
        value: %{id: id, name: e(data, :name, nil) || if(is_tuple(data), do: elem(data, 1), else: data)},
        target: "#smart_input"
      )}
      class="btn border-r border-base-content/30 btn-xs btn-square btn-ghost !rounded-none border-none !border-l  border-l-solid border-base-content/30"
    >
      <#Icon iconify="ri:close-line" class="w-5 h-5 md:w-4 md:h-4" />
    </div>
    <div class="flex border-l border-solid border-l-base-content/30 items-center gap-1">
      <Bonfire.Boundaries.Web.RolesDropdownLive circle_id={id} />
    </div>
  </div>
</div>
