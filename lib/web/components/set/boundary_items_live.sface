<div class="flex flex-col gap-3">
  <div
    :for={{id, data} <- Bonfire.Boundaries.Web.SetBoundariesLive.reject_presets(@to_boundaries || [])}
    class="flex items-center justify-between"
  >
    <div class="flex items-center gap-3 grow">
      <span class="flex items-center w-10 h-10 rounded place-content-center bg-base-content/5">
        <Icon solid="LockClosed" class="inline-block w-5 h-5 text-base-content/70" />
      </span>
      <div class="text-sm font-medium text-base-content">{e(data, :name, nil) || if is_tuple(data), do: elem(data, 1), else: data}</div>
    </div>

    <div class="flex items-center gap-2">
      <Bonfire.Boundaries.Web.BoundaryDetailsModalLive
        id={id}
        name={e(data, :name, nil) || if is_tuple(data), do: elem(data, 1), else: data}
      />
      <div
        phx-click={JS.push("Bonfire.Boundaries:remove_boundary",
          value: %{id: id, name: e(data, :name, nil) || if(is_tuple(data), do: elem(data, 1), else: data)},
          target: "#smart_input"
        )}
        class="btn btn-error btn-sm btn-square opacity-80"
      >
        <Icon solid="Minus" class="w-4 h-4" />
      </div>
    </div>
  </div>

  <div :for={{data, id} <- @to_circles || []} class="flex items-center justify-between">
    {#case data}
      {#match %{"icon" => _}}
        <Bonfire.UI.Common.ProfileItemLive profile={data} character={data} show_controls={[]} />
      {#match _ when is_binary(data)}
        <div class="flex items-center gap-3 grow">
          <span class="flex items-center w-10 h-10 rounded place-content-center bg-base-content/5">
            <Icon iconify="bxs:user-circle" class="inline-block w-5 h-5 text-base-content/70" />
          </span>
          <div class="text-sm font-medium text-base-content">{data}</div>
        </div>
      {#match _}
        <div class="flex items-center gap-3 grow">
          <span class="flex items-center w-10 h-10 rounded place-content-center bg-base-content/5">
            <Icon iconify="bx:shape-circle" class="inline-block w-5 h-5 text-base-content/70" />
          </span>
          <div class="text-sm font-medium text-base-content">{e(data, :name, nil) || l("Unknown circle or user")}</div>
        </div>
    {/case}
    <div class="flex items-center gap-2">
      <Bonfire.Boundaries.Web.RolesDropdownLive circle_id={id} />

      <div
        phx-click={JS.push("Bonfire.Boundaries:remove_circle",
          value: %{id: id, name: e(data, :name, nil) || if(is_tuple(data), do: elem(data, 1), else: data)},
          target: "#smart_input"
        )}
        class="btn btn-error btn-sm btn-square opacity-80"
      >
        <Icon solid="Minus" class="w-4 h-4" />
      </div>
    </div>
    <!-- <div aria-haspopup="true" class="dropdown dropdown-top dropdown-end">
          <label tabindex="0" class="flex items-center gap-2 normal-case rounded btn btn-sm">
            <span>{l("Participate")}</span>
            <Icon solid="ChevronDown" class="w-4 h-4" />
          </label>
          <ul
            tabindex="0"
            role="menu"
            aria-orientation="vertical"
            class="!block rounded shadow dropdown_actions w-52 menu menu-compact dropdown-content bg-neutral"
          >
            <li><a>Read</a></li>
            <li><a>Interact</a></li>
            <li><a>Participate</a></li>
            <li><a>Contribute</a></li>
          </ul>
        </div> -->
  </div>

  <!-- show the current user with its default role -->
  <!-- <div class="flex items-center justify-between">
  <Bonfire.UI.Common.ProfileItemLive profile={e(@current_user, :profile, nil)} character={e(@current_user, :character, nil)} show_controls={[]} />
      <div aria-haspopup="true" class="dropdown dropdown-end">
        <label tabindex="0" class="font-medium normal-case btn btn-sm btn-ghost text-base-content/80">
          <span>{l("Caretaker")}</span>
        </label>
      </div>
    </div> -->
</div>
