{#if Enum.empty?(@to_circles)}
  <Bonfire.UI.Common.EmptyFeed
    feedback_title={l("Grant custom permissions")}
    feedback_message={l("Here you can grant specific permissions to one or more users or circles.")}
  />
{#else}
  <div class="flex flex-1 flex-col divide-y divide-base-content/10 mt-3 flex-wrap">
    <!-- <div
    :for={{id, data} <- Bonfire.Boundaries.Web.SetBoundariesLive.reject_presets(@to_boundaries || [])}
    class="mt-2 mr-2 flex items-center justify-between"
  >
    <div class="flex items-center gap-3 grow">
      <span class="flex items-center w-8 h-8 rounded place-content-center bg-base-content/5">
        <#Icon solid="LockClosed" class="inline-block w-5 h-5 text-base-content/70" />
      </span>
      <div class="text-sm font-medium text-base-content">{e(data, :name, nil) || if is_tuple(data), do: elem(data, 1), else: data}</div>
    </div>

    <div class="flex items-center gap-1">
      <Bonfire.Boundaries.Web.BoundaryDetailsModalLive
        id={id}
        name={e(data, :name, nil) || if is_tuple(data), do: elem(data, 1), else: data}
      />
      <div
        phx-click={JS.push("Bonfire.Boundaries:remove_boundary",
          value: %{id: id, name: e(data, :name, nil) || if(is_tuple(data), do: elem(data, 1), else: data)},
          target: "#smart_input"
        )}
        class="rounded btn btn-sm btn-ghost btn-square opacity-80"
      >
        <#Icon solid="Trash" class="w-4 h-4 text-base-content/70" />
      </div>
    </div>
  </div> -->

    <div :for={{data, id} <- @to_circles || []} class="flex py-2 items-center w-full justify-between">
      {#case data}
        {#match %{"icon" => _}}
          <!-- <p class="text-sm truncate max-w-[200px] pl-1.5 text-base-content">
          {e(data, :name, "Anon")}
        </p> -->
          <Bonfire.UI.Common.ProfileItemLive
            avatar_class="w-9 h-9 rounded-full bg-base-100"
            profile={data}
            character={data}
            show_controls={[]}
          />
        {#match _ when is_binary(data)}
          <div class="flex items-center gap-3 grow">
            <#Icon
              iconify="material-symbols:group-work-outline"
              class="inline-block w-8 h-8 text-base-content/70"
            />
            <div class="text-base font-medium text-base-content">{data}</div>
          </div>
        {#match _}
          <div class="flex items-center gap-3 grow">
            <#Icon
              iconify="material-symbols:group-work-outline"
              class="inline-block w-8 h-8 text-base-content/70"
            />
            <div class="text-sm font-bold group-hover:underline text-base-content">{e(data, :name, nil) || l("Unknown circle or user")}</div>
          </div>
      {/case}
      <div class="items-center flex gap-2">
        <div class="flex items-center gap-1" phx-update="ignore">
          <Bonfire.Boundaries.Web.RolesDropdownLive setting_boundaries circle_id={id} />
        </div>

        <div
          phx-click={JS.push("Bonfire.Boundaries:remove_circle",
            value: %{id: id, name: e(data, :name, nil) || if(is_tuple(data), do: elem(data, 1), else: data)},
            target: "#smart_input"
          )}
          class="btn btn-sm btn-circle btn-ghost"
        >
          <#Icon iconify="ph:trash-fill" class="w-5 h-5 md:w-4 md:h-4" />
        </div>
      </div>
    </div>
  </div>
{/if}