<div class={
  "menu flex flex-col gap-3 menu-lg",
  "dropdown-content z-[99999] mt-1 !gap-2 !menu-sm p-1.5 shadow bg-base-100 rounded-box w-[328px]":
    @is_dropdown
}>
  <div class="flex px-2 items-center gap-3 justify-between">
    <button
      class="text-base-content"
      phx-click={JS.push("Bonfire.Boundaries:replace_boundary",
        value: %{id: "public", name: l("Public")},
        target: "#smart_input"
      )}
      type="button"
    >
      <div class="flex items-center gap-2">
        <input
          :if={!@is_dropdown}
          type="radio"
          name="radio-1"
          class="radio"
          checked={matches?(@boundary_preset, "public")}
        />
        <div class="p-1.5 flex items-center text-left">
          <div class="flex-shrink-0">
            <span class="text-xl">
              <#Icon iconify="ph:globe" class={"w-6 h-6", "!w-4 !h-4": @is_dropdown} />
            </span>
          </div>
          <div class="flex flex-col ml-3">
            <div class="text-sm font-semibold text-base-content/90">{l("Public")}</div>
            <p class="text-xs text-base-content/70">
              {l("Publicly visible to everyone. Discoverable by search engines.")}
            </p>
          </div>
        </div>
      </div>
    </button>
    <div :if={matches?(@boundary_preset, "public") && !@is_dropdown} class="flex items-center gap-3">
      <button
        type="button"
        phx-click={JS.hide(to: "#boundaries_picker")
        |> JS.hide(to: "#extra_boundaries")
        |> JS.show(to: "#boundaries_preview")}
        class="btn-sm !border-base-content/30 !border normal-case btn-circle btn btn-outline"
      >
        <#Icon iconify="mdi:eye-outline" class="w-4 h-4" />
        <span class="sr-only">{l("Preview")}</span>
      </button>
      <button
        type="button"
        phx-click={JS.toggle(to: "#extra_boundaries") |> JS.toggle(to: "#boundaries_picker")}
        class="btn btn-sm !border-base-content/30 !border btn-outline btn-circle normal-case"
      >
        <#Icon iconify="ph:gear-fill" class="w-4 h-4" />
        <span class="sr-only">{l("Customise")}</span>
      </button>
    </div>
  </div>
  <div class="flex px-2 items-center gap-3 justify-between">
    <button
      class="text-base-content"
      phx-click={JS.push("Bonfire.Boundaries:replace_boundary",
        value: %{id: "local", name: l("Local")},
        target: "#smart_input"
      )}
      type="button"
    >
      <div class="flex items-center gap-2">
        <input
          :if={!@is_dropdown}
          type="radio"
          name="radio-1"
          class="radio"
          checked={matches?(@boundary_preset, "local")}
        />
        <div class="p-1.5 flex items-center text-left">
          <div class="flex-shrink-0">
            <span class="text-xl">
              <#Icon iconify="ph:campfire-bold" class={"w-6 h-6", "!w-4 !h-4": @is_dropdown} />
            </span>
          </div>
          <div class="flex flex-col ml-3">
            <div class="text-sm font-semibold text-base-content/90">{l("Local")}</div>
            <p class="text-xs text-base-content/70">
              {l("Everyone on this instance will be able to see, interact, and reply.")}
            </p>
          </div>
        </div>
      </div>
    </button>
    <div :if={matches?(@boundary_preset, "local") && !@is_dropdown} class="flex items-center gap-3">
      <button
        type="button"
        phx-click={JS.hide(to: "#boundaries_picker")
        |> JS.hide(to: "#extra_boundaries")
        |> JS.show(to: "#boundaries_preview")}
        class="btn-sm !border-base-content/30 !border normal-case btn-circle btn btn-outline"
      >
        <#Icon iconify="mdi:eye-outline" class="w-4 h-4" />
        <span class="sr-only">{l("Preview")}</span>
      </button>
      <button
        type="button"
        phx-click={JS.toggle(to: "#extra_boundaries") |> JS.toggle(to: "#boundaries_picker")}
        class="btn btn-sm !border-base-content/30 !border btn-outline btn-circle normal-case"
      >
        <#Icon iconify="ph:gear-fill" class="w-4 h-4" />
        <span class="sr-only">{l("Customise")}</span>
      </button>
    </div>
  </div>

  <div class="flex px-2 items-center gap-3 justify-between">
    <button
      class="text-base-content"
      phx-click={JS.push("Bonfire.Boundaries:replace_boundary",
        value: %{id: "mentions", name: l("Mentions")},
        target: "#smart_input"
      )}
      type="button"
    >
      <div class="flex items-center gap-2">
        <input
          :if={!@is_dropdown}
          type="radio"
          name="radio-1"
          class="radio"
          checked={matches?(@boundary_preset, "mentions")}
        />
        <div class="p-1.5 flex items-center text-left">
          <div class="flex-shrink-0">
            <span class={"text-2xl", "!text-lg": @is_dropdown}>ï¹«</span>
          </div>
          <div class="flex flex-col ml-3">
            <div class="text-sm font-semibold text-base-content/90">{l("Mentions")}</div>
            <p class="text-xs text-base-content/70">
              {l("Anyone mentioned will be able to see, interact, and reply.")}
            </p>
          </div>
        </div>
      </div>
    </button>
    <div
      :if={matches?(@boundary_preset, "mentions") && !@is_dropdown}
      class="flex items-center gap-3"
    >
      <button
        type="button"
        phx-click={JS.hide(to: "#boundaries_picker")
        |> JS.hide(to: "#extra_boundaries")
        |> JS.show(to: "#boundaries_preview")}
        class="btn-sm !border-base-content/30 !border normal-case btn-circle btn btn-outline"
      >
        <#Icon iconify="mdi:eye-outline" class="w-4 h-4" />
        <span class="sr-only">{l("Preview")}</span>
      </button>
      <button
        type="button"
        phx-click={JS.toggle(to: "#extra_boundaries") |> JS.toggle(to: "#boundaries_picker")}
        class="btn btn-sm !border-base-content/30 !border btn-outline btn-circle normal-case"
      >
        <#Icon iconify="ph:gear-fill" class="w-4 h-4" />
        <span class="sr-only">{l("Customise")}</span>
      </button>
    </div>
  </div>

  {#for %{id: acl_id} = acl <- @my_acls}
    <div class="flex px-2 items-center gap-3 justify-between">
      <button
        class="text-base-content"
        phx-click={JS.push("Bonfire.Boundaries:replace_boundary",
          value: %{id: acl_id, name: e(acl, :name, nil)},
          target: "#smart_input"
        )}
        type="button"
      >
        <div class="flex items-center gap-2">
          <input
            :if={!@is_dropdown}
            type="radio"
            name="radio-1"
            class="radio"
            checked={matches?(@to_boundaries, acl_id)}
          />
          <div class="p-1.5 flex items-center text-left">
            <div class="flex-shrink-0">
              <span class="text-xl">
                <#Icon iconify="fluent:door-tag-20-filled" class={"w-6 h-6", "!w-4 !h-4": @is_dropdown} />
              </span>
            </div>
            <div class="flex flex-col ml-3">
              <div class="text-sm font-semibold text-base-content/90">{e(acl, :name, nil)}</div>
              <p class="text-xs text-base-content/70">{e(acl, :description, nil)}</p>
            </div>
          </div>
        </div>
      </button>

      <div :if={matches?(@to_boundaries, acl_id) && !@is_dropdown} class="flex items-center gap-3">
        <button
          type="button"
          phx-click={JS.hide(to: "#boundaries_picker")
          |> JS.hide(to: "#extra_boundaries")
          |> JS.show(to: "#boundaries_preview")}
          class="btn-sm !border-base-content/30 !border normal-case btn-circle btn btn-outline"
        >
          <#Icon iconify="mdi:eye-outline" class="w-4 h-4" />
          <span class="sr-only">{l("Preview")}</span>
        </button>

        <button
          type="button"
          phx-click={JS.toggle(to: "#extra_boundaries") |> JS.toggle(to: "#boundaries_picker")}
          class="btn btn-sm !border-base-content/30 !border btn-outline btn-circle normal-case"
        >
          <#Icon iconify="ph:gear-fill" class="w-4 h-4" />
          <span class="sr-only">{l("Customise")}</span>
        </button>
      </div>
    </div>
  {/for}
  <div class="flex px-2 items-center gap-3 justify-between">
    <button
      class="text-base-content"
      phx-click={JS.push("Bonfire.Boundaries:replace_boundary",
        value: %{id: "custom", name: l("Custom")},
        target: "#smart_input"
      )
      |> JS.toggle(to: "#boundaries_picker")
      |> JS.toggle(to: "#extra_boundaries")}
      type="button"
    >
      <div class="flex items-center gap-2">
        <input
          :if={!@is_dropdown}
          type="radio"
          name="radio-1"
          class="radio"
          checked={matches?(@boundary_preset, "custom")}
        />
        <div class="p-1.5 flex items-center text-left">
          <div class="flex-shrink-0">
            <span class="text-xl">
              <#Icon iconify="ph:gear-fill" class={"w-6 h-6", "!w-4 !h-4": @is_dropdown} />
            </span>
          </div>
          <div class="flex flex-col ml-3">
            <div class="text-sm font-semibold text-base-content/90">{l("Custom")}</div>
            <p class="text-xs text-base-content/70">{l("Specify custom boundaries, starting with a blank slate.")}</p>
          </div>
        </div>
      </div>
    </button>
  </div>
</div>

<!-- <div class="flex items-center justify-between px-3 pb-3 mt-4">
  <div>
  </div>
  <button
    type="button"
    phx-click={JS.toggle(to: "#compose_content_wrapper") |> JS.toggle(to: "#boundaries_picker")}
    class="w-full gap-2 normal-case rounded-full btn btn-primary btn-outline"
  >
    <span class="">{l("Done")}</span>
  </button> 
  </div> -->

<div :if={!@is_dropdown} class="px-4 pb-4">
  <Bonfire.Boundaries.Web.BoundaryComposerActionsLive />
</div>